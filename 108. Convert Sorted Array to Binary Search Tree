/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void BST(vector<int> &nums, int start, int end, TreeNode *&parent){
        if(start>end) return;
        int mid = (end + start)/2;
        parent = new TreeNode(nums[mid]);  //last loop parent left/right assign new Tree Node
        BST(nums, start, mid-1, parent->left);  // input parent->left for next loop parent=new TreeNode
        BST(nums, mid+1, end, parent->right);  // inside parent->left BST: e=mid-1, e.g.: (loc)mid=0, e=2-1=1
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode *root = NULL;  // first loop, given val = null for inside BST assign n = new TreeNode
        BST(nums, 0, nums.size()-1, root);
        return root;
    }
};
