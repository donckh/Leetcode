/*Question: move all node in sequence to the right
1. move the right node to the end right of left node
2. move the left node to the right
3. remove the left node
4. go to next node(right node, from the orighinal left)
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        TreeNode * curr = root;
        while(curr!=nullptr){
            if(curr->left){
                TreeNode* left = curr->left;
                while(left->right) left = left->right;
                left -> right = curr->right;
                curr->right = curr->left;
                curr->left = nullptr;
            }
            curr = curr->right;
        }
    }
};
