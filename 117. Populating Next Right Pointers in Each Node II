/*Question: connect the the next to the right node
1. use queue to record each level of tree node
2. if queue contain node:
    1)use prev = curr to intialize the 1st node
    2)prev->next = curr to connect next node
    3)curr->left and curr->right to check if any node remains
3. return
*/


/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if (!root) return nullptr;
        queue <Node*> q;
        q.push(root);
        
        while(!q.empty()){
            int size = q.size();
            Node* prev = nullptr;
            for(int i=0; i<size; i++){
                Node* curr = q.front(); 
                q.pop();
                if(prev) prev->next = curr; 
                prev = curr;
                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right);
            }
        }
        return root;
    }
};
