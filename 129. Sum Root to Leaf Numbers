/* Question: add up all digit from each root to leaf and sum them together
1. build a new function to add up all digit
2. if root to leaf complete, add to the sum
3. return sum after go through all the path 
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int result = 0;
public:
    void pathNumber(TreeNode* root, int path){
        if(root==nullptr) return;
        path = path*10 + root->val;
        if(root->left ==nullptr && root->right==nullptr)
            result += path;
        pathNumber(root->left, path);
        pathNumber(root->right, path);
    }

    int sumNumbers(TreeNode* root) {
        pathNumber(root, 0);
        return result;
    }
};
