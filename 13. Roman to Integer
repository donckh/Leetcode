class Solution {
public:
    int romanToInt(string s) {
        std::unordered_map<char,int> umap = {
            {'I', 1}, {'V', 5}, {'X', 10},
            {'L', 50}, {'C', 100},
            {'D', 500}, {'M', 1000}
        };
        int ans=0, s1, s2, len = s.length();  // use s1, s2 to reduce access umap repeatly
        if(len==1) return umap[s[0]];
        for(int i=1; s[i]; i++){  //use string value directly faster than i<s.length()
            s1 = umap[s[i-1]], s2 = umap[s[i]];
            if(i+1==s.length()) ans += s2;
            if(s1<s2){  //use less than faster than larger and equal
                ans -= s1;
            }
            else{
                ans += s1;
            } 
        }
        return ans;
    }
};
