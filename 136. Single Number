/* Question: find the intergers which appear only once
1. XOR all the nums: (return false if same value: 11->0, 10 or 01->1, 00->0)
2. the remain num will be the result
*/

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int res = 0;
        for(int i:nums){
            res ^= i;
        }
        return res;
    }
};

//simple but need space O(n)
// class Solution {
// public:
//     int singleNumber(vector<int>& nums) {
//         std::unordered_map<int, int> umap;
//         for(int i=0; i<nums.size(); i++){
//             if(!umap.count(nums[i])){
//                 umap[nums[i]]=1;
//             }
//             else umap[nums[i]]=2;
//         }
//         for(auto i=umap.begin(); i!=umap.end(); i++){
//             if(i->second==1) return i->first;
//             // break;
//         }
//         return 0;
//     }
// };

