/* Question: check whether s can be completely semented by wordDict
1. initial the check<bool> to record the prev word exisit in wordDict or not
2. go through the s and check wordDict until the end (size+1)
3. turn true if wordDict find in string
4. return the check[n]
*/
//Time Complexity: O(len) 2 loop and substr, Space Complexity: O(1)
class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        vector<bool> dp(s.size()+1, false);
        dp[0] = true;
        for(int i=1; i<=s.size(); i++){
            for(auto& w: wordDict){
                int start = i - w.size();
                if(start>=0 && dp[start] && s.compare(start, w.size(), w) == 0){
                    dp[i] = true;
                    break;
                } 
            }
        }
        return dp[s.size()];
    }
};
