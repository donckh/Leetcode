/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    void bst(TreeNode* parent){
        ans.push_back(parent->val);  //push val
        if (parent->left!=NULL) {  //if left not NULL, goto left(in left loop push val)
            bst(parent->left);
        }
        if (parent->right!=NULL) {  //from the last left loop, goto right node(push val)
            bst(parent->right);
        }
    }
    vector<int> preorderTraversal(TreeNode* root) {
        if (root!=NULL) {
            bst(root);
        }
        return ans;
    }
};
