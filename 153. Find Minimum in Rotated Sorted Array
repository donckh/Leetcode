/* Question: find the start point of sorted array.
use binary search tree for faster search
*/
class Solution {
public:
    int findMin(vector<int>& nums) {
        int start = 0, end = nums.size() - 1, mid = nums.size()/2, ans = nums[0];
        while(mid > start){
            if(nums[mid] > nums[start]){
                start = mid;
                mid = (start + end) / 2;
                if(start == mid && mid < end) mid = mid + 1;
            }
            else{
                ans = nums[mid];
                end = mid;
                mid = (start + end) / 2;
            }
        }
        return ans;

    }
};

// class Solution {
// public:
//     int findMin(vector<int>& nums) {
//         sort(nums.begin(), nums.end());
//         return nums[0];
//     }
// };

// class Solution {
// public:
//     int findMin(vector<int>& nums) {
//         int ans, num;
//         ans = num = nums[0];
//         for(int i=1; i<nums.size(); i++){
//             if(num < nums[i]) num = nums[i];
//             else {
//                 ans = nums[i];
//                 break;
//             }
//         }
//         return ans;
//     }
// };
