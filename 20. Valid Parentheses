// memory solution
// class Solution {
// public:
//     bool isValid(string s) {
//         map<char, char> backet = {{'(', ')'}, {'{', '}'}, {'[', ']'}};
//         vector<char> temp;
//         if(s.length()%2==1) return false;
//         for(int i=0; s[i]; i++){
//             temp.push_back(s[i]);
//             while(i+1<s.length() && temp.size()>0 && s[i+1] == backet[temp.back()]){
//                 temp.pop_back();
//                 i++;
//             }
//         }
//         if(temp.size()>0) return false;
//         else return true;
//     }
// };

// runtime solution
class Solution {
public:
    bool isValid(string s) {
        map<char, char> backet = {{'(', ')'}, {'{', '}'}, {'[', ']'}};
        vector<char> temp;
        if(s.length()%2==1) return false;
        for(int i=0; s[i]; i++){
            temp.push_back(s[i]);
            while(i+1<s.length() && !temp.empty() && s[i+1] == backet[temp.back()]){
                temp.pop_back();
                i++;
            }
        }
        if(temp.size()>0) return false;
        else return true;
    }
};
