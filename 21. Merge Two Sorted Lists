/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL && list2 == NULL) return NULL;
        ListNode *merge, *ptr = new ListNode(0); // create ListNode as init value
        merge = ptr;
        while(list1!=NULL && list2!=NULL){
            if(list1->val < list2->val){
                merge->next = list1;
                list1 = list1->next;  // remember to shift Linklist for next loop
            }
            else{
                merge->next = list2;
                list2 = list2->next;
            }
            merge = merge->next;  // remember to shift Linklist for next loop
        }
        if(list1==NULL) merge->next = list2;
        else merge->next = list1;
        return ptr->next;  //return start linklist (ptr->next) as complete ans
    }
};
