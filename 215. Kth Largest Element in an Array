/* Question: find the largest kth element from array without sort techinque
1st method:
1. use nth element (quick select-like)
    1) random select an element as pivot
    2) separate left < pivot < right
    3) check if pivot is kth largest element
2. return the kth element

2nd element:
1. use priority_queue:
    1) set greater only to push queue, otherwise drop
    2) go through the array
    3) return queue.top()
*/

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        nth_element(nums.begin(), nums.end() - k, nums.end());
        return nums[nums.size() - k];
    }
};

// 2nd method:
// class Solution {
// public:
//     int findKthLargest(vector<int>& nums, int k) {
//         priority_queue<int, vector<int>, greater<int>> minHeap;
//         int last = INT_MAX;
//         for(int i=0;i<k;i++){
//             minHeap.push(nums[i]);
//             last = min(nums[i], last);
//         } 
//         for(int i=k;i<nums.size(); i++){
//             int curr = nums[i];
//             if(curr <= last) continue;
//             minHeap.push(curr);
//             if(minHeap.size()>k) minHeap.pop();
//             last = minHeap.top();
//         }
//         return last;
//     }
// };
