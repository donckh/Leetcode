/* Question: given string to calculate
1. create stack to save sign
2. accumulate the num
3. store sign to stack, this sign will attach to every bracket num
    e.g.: 1-(3+4) -> 1-3-4
4. calculate the last num
*/

class Solution {
public:
    int calculate(string s) {
        int ans = 0;
        int num = 0; 
        int sign = 1;
        stack<int> stack{{sign}};
        for(const char c:s){
            if(isdigit(c))
                num = num * 10 + (c-'0');
            else if (c == '(')
                stack.push(sign); //1. save sign (it will attach to the bracket num)
            else if (c == ')')
                stack.pop(); //3. remove sign after cal
            else if(c=='+'||c=='-'){
                ans += sign * num; //2. cal previous result
                sign = (c=='+' ? 1: -1) * stack.top(); //save current sign
                num=0;
            }
        }
        return ans+sign*num; //last num need to calculate
    }
};
