/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
// class Solution {
// public:
//     bool isPalindrome(ListNode* head) {
//         if(head==NULL || head->next==NULL) return true;
//         ListNode* prev = NULL, *rev = head;
//         while(rev!=NULL){
//             ListNode* temp = rev->next;
//             rev->next = prev;
//             prev = rev;
//             rev = temp;
//         }
//         while(prev!=NULL || head!=NULL){
//             if(prev!=head) return false;
//             prev = prev->next;
//             head = head->next;
//         }
//         return true;
//     }
// };

class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL) return true;
        vector<int> nums;
        while(head!=NULL){
            nums.push_back(head->val);
            head = head->next;
        }
        for(int i=0, j=nums.size()-1; j>=0; i++,j--){
            if(nums[i]!=nums[j]) return false;
        }
        return true;
    }
};
