// Time Complexity: O(n), Space Complexity: O(1)
// class Solution {
// public:
//     bool isPowerOfThree(int n) {
//         while(n>0){
//             if(n==1) return true;
//             if(n%3==0) n /= 3;
//             else return false;
//         }
//         return false;
//     }
// };

// Time Complexity: O(n), Space Complexity: O(1)
class Solution {
public:
    bool isPowerOfThree(int n) {
        while(n>=3){
            if(n%3==0) n/=3;
            else return false;
        }
        if(n==1) return true;
        return false;
    }
};

// Time Complexity: O(n), Space Complexity: O(1)
// class Solution {
// public:
//     bool isPowerOfThree(int n) {
//         if(n<=0) return false;
//         double result = log10(n)/log10(3); //log3(N)
//         if(result==floor(result)) return true; //check if it is int
//         return false;
//     }
// };
