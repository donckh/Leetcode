/*Question: find the longest substring
1. go through every element
2. check the left and right of element and expand
3. find the largest length of substring
4. return longest substring
*/

//Time Complexity: O(n^2), Space Complexity: O(1)
class Solution {
public:
    void expandCenter(int left, int right, string& s, int& start, int& maxLen){
        while(left >= 0 && right <s.size() && s[left] == s[right]){
            if(right - left + 1 > maxLen){
                start = left;
                maxLen = right - left + 1;
            }
            left--;
            right++;
        }
    }

    string longestPalindrome(string s) {
        int start = 0, maxLen = 1;
        for(int i=0; i<s.size(); i++){
            expandCenter(i, i, s, start, maxLen);
            expandCenter(i, i+1, s, start, maxLen);
        }
        return s.substr(start, maxLen);
    }
};
