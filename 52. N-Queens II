/* Question: find the number of placing max queen solutions.
a queen row, col and diag cannot place another queen
1. use vector<bool> to record the cols and diags when placing queen
2. the number of diag for nxn chessboard is 2n-1
3. backtrack:
    1) row+1 for next loop
    2) for(int col: cols) 
    3) check every cols, diag1 and diag2 bool to true before start backtrack
    4) reset bool for backtrack

   c0  c1  c2  c3
r0  3   2   1   0
r1  4   3   2   1
r2  5   4   3   2
r3  6   5   4   3
*/

class Solution {
public:
    int totalNQueens(int n) {
        vector<bool> cols(n, false);
        vector<bool> diag1(2 * n - 1, false); //e.g. n=4: row+col-1
        vector<bool> diag2(2 * n - 1, false);
        int cnt = 0;
        backtrack(n, 0, cols, diag1, diag2, cnt);
        return cnt;
    }
private:
    void backtrack(int n, int row, vector<bool>& cols, vector<bool>& diag1, vector<bool>& diag2, int& cnt){
        if(row==n) {
            cnt++;
            return;
        }
        
        for(int col=0; col<n; col++){
            if(cols[col] || diag1[row+col] || diag2[row-col+n-1]) continue;
            cols[col] = diag1[row+col] = diag2[row-col+n-1] = true;
            backtrack(n, row+1, cols, diag1, diag2, cnt);
            cols[col] = diag1[row+col] = diag2[row-col+n-1] = false;
        }
    }
};
