/* Question: find the average of every level tree
1. go through every tree node with queue
2. sum all value and divide by the size
3. push the average value
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> result;
        if(!root) return result;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int levelSize = q.size();
            long long sum = 0;
            for(int i=0; i<levelSize; i++){
                TreeNode* curr = q.front(); q.pop();
                sum += curr->val;
                if(i==levelSize-1) result.push_back(sum/double(levelSize));
                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right);
            }
        }
        return result;
    }
};
