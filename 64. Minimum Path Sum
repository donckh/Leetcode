/* Question: find the min path sum from top left to bottom right
1. initial the 1st row and column(assume go through from top left to right and top left to bottom left)
2. record path sum at 1st row/col
3. go through every element and store the min value from top and left
4. return the last element as result
*/
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size(), n = grid[0].size();

        for(int i=1; i<m; i++){
            grid[i][0] += grid[i-1][0];
        }
        for(int i=1; i<n; i++){
            grid[0][i] += grid[0][i-1];
        }

        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
                grid[i][j] += min(grid[i][j-1], grid[i-1][j]);
            }
        }
        return grid[m-1][n-1];
    }
};
