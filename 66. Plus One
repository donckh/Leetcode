// class Solution {
// public:
//     vector<int> plusOne(vector<int>& digits) {
//         int last = digits.size()-1;
//         digits[last] = digits[last] + 1;
//         while(last>=0 && digits[last]>9){
//             if(last-1>=0){
//                 digits[last-1] += digits[last]/10;
//                 digits[last] = digits[last]%10;
//             }
//             else{
//                 digits.push_back(digits.back());
//                 for(int i=digits.size()-1; i>0; i--){
//                     digits[i] = digits[i-1];
//                 }
//                 digits[0] = digits[1] / 10;
//                 digits[1] = digits[1] % 10;
//             }
//             last--;
//         }
//         return digits;
//     }
// };

// class Solution {
// public:
//     vector<int> plusOne(vector<int>& digits) {
//         int last = digits.size()-1;
//         digits[last] = digits[last] + 1;
//         while(last>=0 && digits[last]>9){
//             if(last-1>=0){
//                 digits[last-1] += digits[last]/10;
//                 digits[last] = digits[last]%10;
//             }
//             else{
//                 digits.insert(digits.begin(), digits[0] / 10);
//                 digits[1] = digits[1] % 10;
//             }
//             last--;
//         }
//         return digits;
//     }
// };

class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int last = digits.size()-1;
        for(int i=last; i>=0; i--){
            if(digits[i]<9){
                digits[i] += 1;
                return digits;
            }
            else{
                digits[i] = 0;
            }
        }
        digits.insert(digits.begin(), 1);
        return digits;
    }
};
