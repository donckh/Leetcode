//Time Complexity: O(mn)~11%, Space Complexity: O(m)~78%
// class Solution {
// public:
//     void setZeroes(vector<vector<int>>& matrix) {
//         int m=matrix.size(), n=matrix[0].size();
//         vector<int> col;
//         bool zero=false;
//         for(int i=0; i<m; i++){
//             if(zero){
//                 zero=false;
//                 for(int j=0; j<n; j++){
//                     matrix[i-1][j] = 0;
//                     if(matrix[i][j]==0){
//                         col.push_back(j);
//                         zero=true;
//                     }
//                 }
//             }
//             else{
//                 for(int j=0; j<n; j++){
//                     if(matrix[i][j]==0){
//                         col.push_back(j);
//                         zero=true;
//                     }
//                 }
//             }
//             if(i+1==m && zero)
//                 for(int j=0; j<n; j++) matrix[i][j] = 0;
//         }
//         for(auto c: col){
//             for(int i=0; i<m;i++){
//                 if(matrix[i][c]!=0) matrix[i][c]=0;
//             }       
//         }
//     }
// };

//Time Complexity: O(mn)~69%, Space Complexity: O(m)~78%
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m=matrix.size(), n=matrix[0].size();
        vector<int> col;
        bool zero=false;
        for(int i=0; i<m; i++){
            if(zero){
                zero=false;
                for(int j=0; j<n; j++){
                    matrix[i-1][j] = 0;
                    if(matrix[i][j]==0){
                        col.push_back(j);
                        zero=true;
                    }
                }
            }
            else{
                for(int j=0; j<n; j++){
                    if(matrix[i][j]==0){
                        col.push_back(j);
                        zero=true;
                    }
                }
            }
        }
        if(zero)
            for(int j=0; j<n; j++) matrix[m-1][j] = 0;
        for(auto c: col){
            for(int i=0; i<m;i++){
                if(matrix[i][c]!=0) matrix[i][c]=0;
            }       
        }
    }
};

//Time Complexity: O(mn)~72%, Space Complexity: O(1)~40%
// class Solution {
// public:
//     void setZeroes(vector<vector<int>>& matrix) {
//         int m =matrix.size();
//         int n = matrix[0].size();
//         int x = 1;
//         int y = 1;
//         for(int j=0;j<n;j++)
//             if(matrix[0][j]==0)x=0;
//         for(int i=0;i<m;i++)
//             if(matrix[i][0]==0)y=0;

//         for(int i=1;i<m;i++)
//         {
//             for(int j=1;j<n;j++)
//             {
//                 if(matrix[i][j]==0)
//                 {
//                     matrix[i][0]=0;
//                     matrix[0][j]=0;
//                 }
//             }
//         }
        
//         for(int j=1;j<n;j++)
//         {
//            if(matrix[0][j]==0)
//            {
//                for(int i=1;i<m;i++)
//                    matrix[i][j]=0;
//            }
//         }
        
//         for(int i=1;i<m;i++)
//         {
//             if(matrix[i][0]==0)
//             {
//                 for(int j=0;j<n;j++)
//                     matrix[i][j]=0;
//             }
//         }
        
//         if(y==0)
//             for(int i=0;i<m;i++)
//                 matrix[i][0]=0;
        
//         if(x==0)     
//             for(int j=0;j<n;j++)
//                 matrix[0][j]=0;
//     }
// };

//Time Complexity: O(mn)~40%, Space Complexity: O(1)~90%
// class Solution {
// public:
//     void setZeroes(vector<vector<int>>& matrix) {
//         int m=matrix.size(), n=matrix[0].size();
//         vector<int> col;
//         bool zero=false, x = false;
//         for(int j=0; j<n; j++)
//             if(matrix[0][j]==0)
//                 x=true;

//         for(int i=1; i<m; i++){
//             if(zero){
//                 zero=false;
//                 for(int j=0; j<n; j++){
//                     matrix[i-1][j] = 0;
//                     if(matrix[i][j]==0){
//                         // col.push_back(j);
//                         matrix[0][j] = 0;
//                         zero=true;
//                     }
//                 }
//             }
//             else{
//                 for(int j=0; j<n; j++){
//                     if(matrix[i][j]==0){
//                         // col.push_back(j);
//                         matrix[0][j] = 0;
//                         zero=true;
//                     }
//                 }
//             }
//         }
//         if(zero)
//             for(int j=0; j<n; j++) matrix[m-1][j] = 0;
//         // for(auto c: col){
//         //     for(int i=0; i<m;i++){
//         //         if(matrix[i][c]!=0) matrix[i][c]=0;
//         //     }       
//         // }
//         for(int j=0; j<n; j++){
//             if(matrix[0][j]==0){
//                 for(int i=0; i<m; i++){
//                     matrix[i][j]=0;
//                 }
//             }
//         }
//         if(x)
//             for(int j=0; j<n; j++) matrix[0][j] = 0;
//     }
// };
