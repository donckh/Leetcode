//Time Complexity: O(n), Space Complexity: O(n)
class Solution {
public:
    vector<vector<int>> ans;
    void subAns(vector<int>& nums, vector<int> subset, int idx){
        if(idx==nums.size()){
            ans.push_back(subset);
            return;  //end void
        }
        // subset.push_back(nums[idx]);
        subAns(nums, subset, idx+1);
        subset.push_back(nums[idx]);
        // subset.pop_back();
        subAns(nums, subset, idx+1);
        //push_back: {1,2,3}
        //with pop_back:{2,3}, {1,3}, {1,2}, {1}, {2}, {3}, {}
    }

    vector<vector<int>> subsets(vector<int>& nums) {
        subAns(nums, {}, 0);
        return ans;
    }
};
