/*Sol: make reverse 3 times to make it work
Reverse the entire array:
Example: ( [1,2,3,4,5,6,7] ) → ( [7,6,5,4,3,2,1] )
Reverse the first ( k ) elements:
Example: ( [7,6,5,4,3,2,1] ) → ( [5,6,7,4,3,2,1] )
Reverse the last ( n-k ) elements:
Example: ( [5,6,7,4,3,2,1] ) → ( [5,6,7,1,2,3,4] )
*/

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        k %= nums.size(); // reduce rotation time if k exceed nums size
        reverse(nums.begin(), nums.end()); //make reverse the whole vector
        reverse(nums.begin(), nums.begin()+k); //make reverse only k vector
        reverse(nums.begin()+k, nums.end()); //make reverse for the original begining vector value
    }
};
